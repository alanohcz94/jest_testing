[{"content":"import { render, screen } from '@testing-library/react';\n\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"\">Link</a>\n      <button>Button</button>\n      <footer>ContentInfo</footer>\n      <h1>Header</h1>\n      <header>Banner</header>\n      <img alt=\"description\" /> IMG\n      <input type=\"checkbox\" /> checkbox\n      <input type=\"number\" /> Spinbutton\n      <input type=\"radio\" /> Radio\n      <input type=\"textbox\" /> textbox\n      <li>ListItem</li>\n      <ul>ListGroup</ul>\n    </div>\n  )\n}\n\nrender(<RoleExample />);","type":"code","id":"ox6f8"},{"content":"test(\"can't find element by role\", () => {\n  render(<RoleExample />)\n\n  const roles = [\n    'link',\n    'button',\n    'contentinfo',\n    'heading',\n    'banner',\n    'img',\n    'checkbox',\n    'spinbutton',\n    'radio',\n    'textbox',\n    'listitem',\n    'list'\n  ];\n\n  for(let role of roles) {\n    const el = screen.getByRole(role);\n\n    expect(el).toBeInTheDocument();\n  }\n})","type":"code","id":"13uyq"},{"content":"import { render, screen } from '@testing-library/react';\n\nfunction AccessibleName() {\n  return (\n    <div>\n      <button>Submit</button>\n      <button>Cancel</button>\n    </div>\n  );\n}\n\nrender(<AccessibleName />);","type":"code","id":"n4hx3"},{"content":"test('can select by accessible name', () => {\n  render(<AccessibleName />);\n\n  const submitButton = screen.getByRole('button', { name: /submit/i });\n  const cancelButton = screen.getByRole('button', { name: /cancel/i });\n\n  expect(submitButton).toBeInTheDocument();\n  expect(cancelButton).toBeInTheDocument();\n});","type":"code","id":"4olfj"},{"content":"function MoreNames() {\n  return(\n    <div> \n      <label htmlFor=\"email\">Email</label>\n      <input id=\"email\" /> \n\n      <label htmlFor=\"search\">Search</label>\n      <input id=\"search\"  /> \n    </div>\n  )\n}\n\nrender(<MoreNames />);","type":"code","id":"jt78b"},{"content":"test('show an email and search input',() => {\n  render(<MoreNames />);\n\n  const emailInput = screen.getByRole('textbox', {\n    name : /email/i\n  });\n\n  const searchInput = screen.getByRole('textbox', {\n    name : /search/i\n  });\n\n  expect(emailInput).toBeInTheDocument();\n  expect(searchInput).toBeInTheDocument();\n})","type":"code","id":"wr5gg"},{"content":"function IconButtons() {\n  return (\n    <div>\n      <button aria-label=\"sign in\">\n      <svg/>\n      </button>\n\n      <button aria-label=\"sign out\">\n      <svg/>\n      </button>\n    </div>\n  )\n}\n\nrender(<IconButtons />);","type":"code","id":"o2nwa"},{"content":"test('find elements based on label',() => {\n  render(<IconButtons />);\n\n  const signInButton = screen.getByRole('button', {\n    name: /sign in/i\n  })\n\n  const signOutButton = screen.getByRole('button', {\n    name: /sign out/i\n  })\n\n  expect(signInButton).toBeInTheDocument();\n  expect(signOutButton).toBeInTheDocument();\n})","type":"code","id":"3loyh"}]