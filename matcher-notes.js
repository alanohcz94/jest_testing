[{"content":"import { render, screen, within } from '@testing-library/react';\n\nfunction FormData() {\n  return (\n    <div>\n      <button>Go Back</button>\n      <form aria-label=\"form\">\n        <button>SAVE</button>\n        <button>CANCEL</button>\n      </form>\n    </div>\n  );\n}\n\nrender(<FormData />);","type":"code","id":"uck87"},{"content":"function toContainRole(container, role, quantity = 1) {\n\n  const elements = within(container).queryAllByRole(role);\n\n  if (elements.length === quantity) {\n    return {\n      pass:true\n    };\n  }\n\n  return {\n    pass: false,\n    message: () => `Expected to find ${quantity} ${role} elements. Found ${elements.length} instead.`\n  }\n}\n\nexpect.extend({toContainRole});","type":"code","id":"asnur"},{"content":"test('the form displays two buttons', () => {\n  render(<FormData />);\n\n  const form = screen.getByRole('form');\n  // IF we have a lot of roles things to find within the form example 20 we cannot write 20 different getByRole items to find it will be a lot of lines of code and it will not be clear anymore therefore we can create out own custom matcher\n  // Example 1\n  // const buttons = within(form).getAllByRole('button');\n  // expect(buttons).toHaveLength(2);\n\n  // Example 2 Custom Matcher\n  expect(form).toContainRole('button', 2);\n});","type":"code","id":"n4wom"}]